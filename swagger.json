{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Pro",
    "version": "1.0.0",
    "description": "Welcome to TaskPro app, developed by a talented team of GoIt  school. TaskPro is designed to help you stay organized, whether it's in your professional workspace or personal life. This app allowing users to create boards where they can organize their tasks into columns. The application offers a wide range of features related to boards and tasks, including the creation, updating, and deletion of boards, columns, and tasks. Additionally, TaskPro offers three different themes to choose from and the ability to customize the background of your boards. Our main goal was to provide an intuitive and user-friendly interface to enhance your productivity and help you achieve your goals effectively. We hope we have succeeded in creating a beautiful and functional application."
  },
  "servers": [
    {
      "url": "http://localhost:9999/api",
      "description": "Backend server"
    },

    {
      "url": "https://task-pro.onrender.com/api",
      "description": "Backend server"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Endpoints related to users"
    },
    {
      "name": "Board",
      "description": "Endpoints related to boards"
    },
    {
      "name": "Column",
      "description": "Endpoints related to columns"
    },
    {
      "name": "Task",
      "description": "Endpoints related to tasks"
    },
    {
      "name": "Support",
      "description": "Endpoint for sending emails to support"
    }
  ],
  "paths": {
    "/user/registration": {
      "post": {
        "summary": "Register new user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Successful registration"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email in use"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest",
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse",
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Wrong email or password"
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "summary": "Check user",
        "tags": ["User"],
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse",
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/user/theme": {
      "patch": {
        "summary": "Update user's theme",
        "tags": ["User"],
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UserThemeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "theme": {
                      "type": "string",
                      "description": "User's updated theme",
                      "example": "dark"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "There is no theme"
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "summary": "Update user",
        "tags": ["User"],
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserUpdateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "summary": "User's logout",
        "tags": ["User"],
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Logout success"
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/board": {
      "get": {
        "summary": "Get all boards with columns and tasks",
        "tags": ["Board"],
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/AllBoardsWithColumnsAndTasksResponse"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          }
        }
      },
      "post": {
        "summary": "Add new board",
        "tags": ["Board"],
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/AddingNewBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New board created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AddingNewBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          }
        }
      }
    },
    "/board/{boardId}": {
      "get": {
        "summary": "Get board with columns and tasks by ID",
        "tags": ["Board"],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/GetBoardById"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          }
        }
      },
      "patch": {
        "summary": "Update board",
        "tags": ["Board"],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/UpdateBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Successful update"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "Board id (from params) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete board",
        "tags": ["Board"],
        "parameters": [
          {
            "name": "boardId",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Board deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "404": {
            "description": "Board id (from params) not found"
          }
        }
      }
    },
    "/column": {
      "post": {
        "summary": "Add new column",
        "tags": ["Column"],
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/AddingNewColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New column created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AddingNewColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          }
        }
      }
    },
    "/column/{columnId}": {
      "patch": {
        "summary": "Update column title",
        "tags": ["Column"],
        "parameters": [
          {
            "name": "columnId",
            "in": "path",
            "description": "Column ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/ColumnTitleUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Successful update"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "Column id (from params) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete column",
        "tags": ["Column"],
        "parameters": [
          {
            "name": "columnId",
            "in": "path",
            "description": "Column ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Column deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "404": {
            "description": "Column id (from params) not found"
          }
        }
      }
    },
    "/task": {
      "post": {
        "summary": "Add task to column",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "columnId",
            "in": "path",
            "description": "Column ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/AddNewTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New task created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/AddNewTaskResponse"
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "Column id (from params) not found"
          }
        }
      }
    },
    "/task/{taskId}": {
      "patch": {
        "summary": "Update task",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/TaskUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Task updated"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          },
          "404": {
            "description": "Task id (from params) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete task",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Task ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "649885bb8cfd32ed13fd42d3"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Task deleted"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "404": {
            "description": "Column id (from params) not found"
          }
        }
      }
    },
    "/support": {
      "post": {
        "summary": "Sending email to support",
        "tags": ["Support"],
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/SupportRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Message sent"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Problem with Authorization missing header, invalid token"
          },
          "400": {
            "description": "Validation error (missing fields in body)"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "john.smith@gmail.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 32,
            "description": "User's password",
            "example": "qwerty1234"
          }
        },
        "required": ["email", "password", "name"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "john.smith@gmail.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 32,
            "description": "User's password",
            "example": "qwerty1234"
          }
        },
        "required": ["email", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTQyYjI4MzEyY2YzYWJlYTExNjMzNCIsImlhdCI6MTY4NzQzMjM1MSwiZXhwIjoxNjg3NTE4NzUxfQ.DCEB2Q0lghWYieYxiZohu4uMMpwMYFa55XOqMgggVVg"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "theme": {
            "type": "string",
            "enum": ["light", "dark", "violet"],
            "description": "User's theme",
            "example": "dark"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email",
            "example": "john.smith@gmail.com"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar"
          },
          "theme": {
            "type": "string",
            "enum": ["light", "dark", "violet"],
            "description": "User's theme",
            "example": "dark"
          }
        }
      },
      "UserThemeRequest": {
        "type": "object",
        "properties": {
          "theme": {
            "type": "string",
            "description": "User's theme",
            "enum": ["dark", "light", "violet"],
            "example": "violet"
          }
        },
        "required": ["theme"]
      },
      "UserUpdateRequest": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "format": "binary",
            "description": "User's avatar file"
          },
          "updateInfo": {
            "type": "string"
          }
        }
      },
      "UserUpdateResponse": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "nullable": true,
            "description": "URL or null",
            "example": "https://res.cloudinary.com/"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "John"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "john.smith@gmail.com"
          }
        }
      },
      "AllBoardsWithColumnsAndTasksResponse": {
        "type": "array",
        "items": {
          "properties": {
            "_id": {
              "type": "string",
              "description": "Board Id",
              "example": "64db80ee68cec09b0c36cc333"
            },
            "title": {
              "type": "string",
              "description": "Title of the board",
              "example": "My board"
            },
            "icon": {
              "type": "string",
              "description": "Icon name for this board",
              "example": "star"
            },
            "background": {
              "type": ["null", "string"],
              "nullable": true,
              "description": "Board background(string/null)",
              "example": null
            },
            "user": {
              "type": "string",
              "description": "User's id to whom this board refer (generated by backend)",
              "example": "64db80ee68cec09b0c36cc333"
            },
            "columns": {
              "type": "array",
              "properties": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Column Id",
                    "example": "649885bb8cfd32ed13fd42d3"
                  },
                  "title": {
                    "type": "string",
                    "description": "Column title",
                    "example": "To do"
                  },
                  "board": {
                    "type": "string",
                    "description": "BoardId to which the columns refers",
                    "example": "649885bb8cfd32ed13fd42d3"
                  },
                  "tasks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Task Id",
                          "example": "649885bb8cfd32ed13fd42d3"
                        },
                        "title": {
                          "type": "string",
                          "description": "Task title",
                          "example": "To buy some food"
                        },
                        "description": {
                          "type": "string",
                          "description": "Task description",
                          "example": "Bread, meat and bla bla bla or dubi dubi dubi"
                        },
                        "priority": {
                          "type": "string",
                          "enum": ["low", "medium", "high", "none"],
                          "description": "Task priority",
                          "example": "high"
                        },
                        "deadline": {
                          "type": "string",
                          "description": "Task deadline",
                          "example": "2023-07-21T20:57:15.000Z"
                        },
                        "column": {
                          "type": "string",
                          "description": "ColumnId to which the task refers"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "example": {
            "example": {
              "value": [
                {
                  "_id": "6499fc7f8f5b7f86f156a98d",
                  "title": "Team project",
                  "icon": "computer",
                  "background": null,
                  "user": "64942b28312cf3abea116334",
                  "columns": [
                    {
                      "_id": "6499fd028f5b7f86f156a990",
                      "title": "layout",
                      "board": "6499fc7f8f5b7f86f156a98d",
                      "tasks": [
                        {
                          "_id": "649b55ecdd5a42896aae372a",
                          "title": "sidebar layout",
                          "description": "Column description",
                          "priority": "none",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "column": "6499fd028f5b7f86f156a990"
                        },
                        {
                          "_id": "649b55f7dd5a42896aae3731",
                          "title": "dashboard layout",
                          "description": "Column description",
                          "priority": "none",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "column": "6499fd028f5b7f86f156a990"
                        }
                      ]
                    },
                    {
                      "_id": "6499fd0d8f5b7f86f156a993",
                      "title": "back",
                      "board": "6499fc7f8f5b7f86f156a98d",
                      "tasks": [
                        {
                          "_id": "649b5603dd5a42896aae3738",
                          "title": "routes",
                          "description": "Task description",
                          "priority": "none",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "column": "6499fd0d8f5b7f86f156a993"
                        }
                      ]
                    }
                  ]
                },
                {
                  "_id": "649ca3c0efe66a4b29e011fb",
                  "title": "My favourite project",
                  "icon": "star",
                  "background": null,
                  "user": "64942b28312cf3abea116334",
                  "columns": []
                },
                {
                  "_id": "649ca3deefe66a4b29e011fe",
                  "title": "My unrealistic project",
                  "icon": "star",
                  "background": null,
                  "user": "64942b28312cf3abea116334",
                  "columns": [
                    {
                      "_id": "649ca4e4efe66a4b29e01205",
                      "title": "Believe in IT",
                      "board": "649ca3deefe66a4b29e011fe",
                      "tasks": []
                    },
                    {
                      "_id": "649ca4fcefe66a4b29e01208",
                      "title": "GOIT forever",
                      "board": "649ca3deefe66a4b29e011fe",
                      "tasks": []
                    },
                    {
                      "_id": "649ca526efe66a4b29e0120b",
                      "title": "Back to Ukraine",
                      "board": "649ca3deefe66a4b29e011fe",
                      "tasks": [
                        {
                          "_id": "649ca578efe66a4b29e0120f",
                          "title": "wash away all occupants",
                          "description": "Task description",
                          "priority": "high",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "column": "649ca526efe66a4b29e0120b"
                        },
                        {
                          "_id": "649ca59defe66a4b29e01216",
                          "title": "live peaceful life",
                          "description": "Task description",
                          "priority": "high",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "column": "649ca526efe66a4b29e0120b"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "GetBoardById": {
        "type": "array",
        "items": {
          "properties": {
            "_id": {
              "type": "string",
              "description": "Board Id",
              "example": "5f86793b8a7c4d2e"
            },
            "title": {
              "type": "string",
              "description": "Title of the board",
              "example": "My board"
            },
            "icon": {
              "type": "string",
              "description": "Icon name for this board",
              "example": "star"
            },
            "background": {
              "type": ["null", "string"],
              "nullable": true,
              "description": "Board background(string/null)",
              "example": null
            },
            "user": {
              "type": "string",
              "description": "User's id to whom this board refer (generated by backend)",
              "example": "5f86793b8a7c4d2e"
            },
            "columns": {
              "type": "array",
              "properties": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Column Id",
                    "example": "649885bb8cfd32ed13fd42d3"
                  },
                  "title": {
                    "type": "string",
                    "description": "Column title",
                    "example": "To do"
                  },
                  "board": {
                    "type": "string",
                    "description": "BoardId to which the columns refers",
                    "example": "649885bb8cfd32ed13fd42d3"
                  },
                  "tasks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Task Id",
                          "example": "649885bb8cfd32ed13fd42d3"
                        },
                        "title": {
                          "type": "string",
                          "description": "Task title",
                          "example": "To buy some food"
                        },
                        "description": {
                          "type": "string",
                          "description": "Task description",
                          "example": "Bread, meat and bla bla bla or dubi dubi dubi"
                        },
                        "priority": {
                          "type": "string",
                          "enum": ["low", "medium", "high", "none"],
                          "description": "Task priority",
                          "example": "high"
                        },
                        "deadline": {
                          "type": "string",
                          "description": "Task deadline",
                          "example": "2023-07-21T20:57:15.000Z"
                        },
                        "column": {
                          "type": "string",
                          "description": "ColumnId to which the task refers"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "example": {
            "example": {
              "value": [
                {
                  "_id": "6499fc7f8f5b7f86f156a98d",
                  "title": "Team project",
                  "icon": "computer",
                  "background": null,
                  "user": "64942b28312cf3abea116334",
                  "columns": [
                    {
                      "_id": "6499fd028f5b7f86f156a990",
                      "title": "layout",
                      "board": "6499fc7f8f5b7f86f156a98d",
                      "tasks": [
                        {
                          "_id": "649b55ecdd5a42896aae372a",
                          "title": "sidebar layout",
                          "description": "blablablabla",
                          "priority": "none",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "column": "6499fd028f5b7f86f156a990"
                        },
                        {
                          "_id": "649b55f7dd5a42896aae3731",
                          "title": "dashboard layout",
                          "description": "blablablabla",
                          "priority": "none",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "column": "6499fd028f5b7f86f156a990"
                        }
                      ]
                    },
                    {
                      "_id": "6499fd0d8f5b7f86f156a993",
                      "title": "back",
                      "board": "6499fc7f8f5b7f86f156a98d",
                      "tasks": [
                        {
                          "_id": "649b5603dd5a42896aae3738",
                          "title": "routes",
                          "description": "blablablabla",
                          "priority": "none",
                          "deadline": "2023-07-21T20:57:15.000Z",
                          "column": "6499fd0d8f5b7f86f156a993"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "AddingNewBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board title",
            "example": "My project"
          },
          "icon": {
            "type": "string",
            "description": "Board icon name",
            "example": "star"
          },
          "background": {
            "type": ["string", "null"],
            "description": "Board background(string/null)",
            "example": "1"
          }
        },
        "required": ["title", "icon"]
      },
      "AddingNewBoardResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Board ID (generated by backend)",
            "example": "5f86793b8a7c4d2e"
          }
        }
      },
      "UpdateBoardRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Board title",
            "example": "My project"
          },
          "icon": {
            "type": "string",
            "description": "Board icon name",
            "example": "star"
          },
          "background": {
            "type": ["string", "null"],
            "description": "Board background(url/null)",
            "example": null
          }
        },
        "required": ["title", "icon", "background"]
      },
      "AddingNewColumnRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Column title",
            "example": "To do"
          },
          "boardId": {
            "type": "string",
            "description": "BoardId to which the column refer",
            "example": "649885bb8cfd32ed13fd42d3"
          }
        },
        "required": ["title", "board"]
      },
      "AddingNewColumnResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Column ID (generated by backend)",
            "example": "5f86793b8a7c4d2e"
          },
          "title": {
            "type": "string",
            "description": "Column title",
            "example": "To do"
          },
          "board": {
            "type": "string",
            "description": "BoardId to which the column refer",
            "example": "649885bb8cfd32ed13fd42d3"
          }
        }
      },
      "ColumnTitleUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Column title",
            "example": "Done"
          }
        },
        "required": "title"
      },
      "AddNewTaskRequest": {
        "type": "object",
        "properties": {
          "columnId": {
            "type": "string",
            "description": "column id of task",
            "example": "5f86793b8a7c4d2e"
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Figure out what is swagger"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Write the swagger"
          },
          "deadline": {
            "type": "string",
            "description": "Task deadline",
            "example": "2023-07-21T20:57:15.000Z"
          },
          "priority": {
            "type": "string",
            "enum": ["high", "low", "medium", "none"],
            "default": "none",
            "description": "Task priority",
            "example": "high"
          }
        },
        "required": ["title", "description", "deadline"]
      },
      "AddNewTaskResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Task ID (generated by backend)",
            "example": "5f86793b8a7c4d2e"
          },
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Figure out what is swagger"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Write the swagger"
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "high"
          },
          "deadline": {
            "type": "string",
            "description": "Task deadline",
            "example": "2023-07-21T20:57:15.000Z"
          },
          "column": {
            "type": "string",
            "description": "ColumnId to which task refer ",
            "example": "649885bb8cfd32ed13fd42d3"
          }
        }
      },
      "TaskUpdateRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Figure out what is swagger"
          },
          "description": {
            "type": "string",
            "description": "Title description",
            "example": "Write the swagger and understand it"
          },
          "deadline": {
            "type": "string",
            "description": "Task deadline",
            "example": "22.07.2023"
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "example": "low"
          },
          "column": {
            "type": "string",
            "description": "ColumnId to which task refer",
            "example": "649885bb8cfd32ed13fd42d3"
          }
        },
        "required": ["title", "description", "deadline", "priority", "column"]
      },
      "SupportRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "example": "test@mail.com"
          },
          "message": {
            "type": "string",
            "description": "Message to support",
            "example": "I'm using TaskPro for a while and it's delete my tasks."
          }
        },
        "required": ["email", "message"]
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
